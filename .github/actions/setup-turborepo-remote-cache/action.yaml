name: "Setup turborepo remote cache"
description: "Setup turborepo remote cache"
inputs:
  bucket:
    description: "Google cloud bucket to store remote cache"
    required: true
  google_cloud_token:
    description: "Base64 encoded token from secrets"
    required: true
  secret: # Read more at https://github.com/orgs/community/discussions/13082
    description: "Secret for passing encrypted secret values between jobs"
    required: true

runs:
  using: "composite"
  steps:
    - id: "encrypt_gcp_keys"
      name: "Unpack GCP Service account from secrets and encrypt projectid/key/email for output"
      shell: bash
      env:
        secret: ${{ inputs.secret }}
      run: |
        GOOGLE_CLOUD_TOKEN=$(echo ${{ inputs.google_cloud_token }} | base64 --decode)

        GOOGLE_CLOUD_PROJECT_ID_ENCRYPTED=$(gpg --symmetric --batch --passphrase "$secret" --output - <(echo "$GOOGLE_CLOUD_TOKEN" | jq -r '.project_id') | base64 -w0)
        echo "::add-mask::GOOGLE_CLOUD_PROJECT_ID_ENCRYPTED"
        echo "GOOGLE_CLOUD_PROJECT_ID_ENCRYPTED=$GOOGLE_CLOUD_PROJECT_ID_ENCRYPTED" >> $GITHUB_OUTPUT

        GOOGLE_CLOUD_CLIENT_PRIVATE_KEY_ENCRYPTED=$(gpg --symmetric --batch --passphrase "$secret" --output - <(echo "$GOOGLE_CLOUD_TOKEN" | jq -r '.private_key') | base64 -w0)
        echo "::add-mask::GOOGLE_CLOUD_CLIENT_PRIVATE_KEY_ENCRYPTED"
        echo "GOOGLE_CLOUD_CLIENT_PRIVATE_KEY_ENCRYPTED<<EOF" >> $GITHUB_OUTPUT
        echo $GOOGLE_CLOUD_CLIENT_PRIVATE_KEY_ENCRYPTED >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

        GOOGLE_CLOUD_CLIENT_EMAIL_ENCRYPTED=$(gpg --symmetric --batch --passphrase "$secret" --output - <(echo "$GOOGLE_CLOUD_TOKEN" | jq -r '.client_email') | base64 -w0)
        echo "::add-mask::GOOGLE_CLOUD_CLIENT_EMAIL_ENCRYPTED"
        echo "GOOGLE_CLOUD_CLIENT_EMAIL_ENCRYPTED=$GOOGLE_CLOUD_CLIENT_EMAIL_ENCRYPTED" >> $GITHUB_OUTPUT

    - id: decrypt_gcp_keys
      name: "Decrypt GCP keys from previous step, mask them and put them to output"
      shell: bash
      env:
        secret: ${{ inputs.secret }}
      run: |
        GOOGLE_CLOUD_PROJECT_ID=$(gpg --decrypt --quiet --batch --passphrase "$secret" --output - <(echo "${{ steps.encrypt_gcp_keys.outputs.GOOGLE_CLOUD_PROJECT_ID_ENCRYPTED }}" | base64 --decode))
        echo "::add-mask::GOOGLE_CLOUD_PROJECT_ID"
        echo "GOOGLE_CLOUD_PROJECT_ID=$GOOGLE_CLOUD_PROJECT_ID" >> $GITHUB_OUTPUT

        GOOGLE_CLOUD_CLIENT_PRIVATE_KEY=$(gpg --decrypt --quiet --batch --passphrase "$secret" --output - <(echo "${{ steps.encrypt_gcp_keys.outputs.GOOGLE_CLOUD_CLIENT_PRIVATE_KEY_ENCRYPTED }}" | base64 --decode))
        echo "::add-mask::GOOGLE_CLOUD_CLIENT_PRIVATE_KEY"
        echo "GOOGLE_CLOUD_CLIENT_PRIVATE_KEY<<EOF" >> $GITHUB_OUTPUT
        echo $GOOGLE_CLOUD_CLIENT_PRIVATE_KEY >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

        GOOGLE_CLOUD_CLIENT_EMAIL=$(gpg --decrypt --quiet --batch --passphrase "$secret" --output - <(echo "${{ steps.encrypt_gcp_keys.outputs.GOOGLE_CLOUD_CLIENT_EMAIL_ENCRYPTED }}" | base64 --decode))
        echo "::add-mask::GOOGLE_CLOUD_CLIENT_EMAIL"
        echo "GOOGLE_CLOUD_CLIENT_EMAIL=$GOOGLE_CLOUD_CLIENT_EMAIL" >> $GITHUB_OUTPUT

    - name: TurboRepo Remote Cache Server
      uses: trappar/turborepo-remote-cache-gh-action@main
      with:
        storage-provider: google-cloud-storage
        storage-path: ${{ inputs.bucket }}
        team-id: team_fvst
      env:
        LOG_LEVEL: "debug"
        GCS_PROJECT_ID: ${{ steps.decrypt_gcp_keys.outputs.GOOGLE_CLOUD_PROJECT_ID }}
        GCS_CLIENT_EMAIL: ${{ steps.decrypt_gcp_keys.outputs.GOOGLE_CLOUD_CLIENT_PRIVATE_KEY }}
        GCS_PRIVATE_KEY: ${{ steps.decrypt_gcp_keys.outputs.GOOGLE_CLOUD_CLIENT_EMAIL }}
