name: "Runs terraform plan in the appropriate environment"
description: "Runs terraform plan in the appropriate environment"
inputs:
  environment:
    description: "Environment name in lower case"
    required: true
  terraform-bucket:
    description: "The bucket we store the terraform state in"
    required: true
  region:
    description: "The region we are deploying too"
    required: true
  docker-tag:
    description: "The docker tag we are deploying"
    required: true
  prefix:
    description: "The unix prefix we set up"
    required: true
  gh-token:
    description: "The github token to leave the terraform plan as a comment"
    required: true
runs:
  using: "composite"
  steps:
    - name: Setup terraform project variables
      shell: bash
      run: |
        echo "TF_VAR_project=${{ inputs.prefix }}-fvst-${{ inputs.environment }}" >> $GITHUB_ENV
        echo "TF_VAR_region=${{ inputs.region }}" >> $GITHUB_ENV
        echo "TF_VAR_docker_tag=${{ inputs.docker-tag }}" >> $GITHUB_ENV
    - name: Setup github token
      shell: bash
      run: |
        echo "GITHUB_TOKEN=${{ inputs.gh-token }}" >> $GITHUB_ENV
    - name: Setup terraform remote and configuration
      shell: bash
      run: |
        cat <<EOT >> "./infra/envs/${{inputs.environment}}/backend.tf"
          terraform {
            backend "gcs" {
              bucket = "${{ inputs.terraform-bucket }}"
            }
        }
        EOT
    - name: Terraform init
      working-directory: ./infra/envs/${{inputs.environment}}
      shell: bash
      run: terraform init
    #    - name: Terraform plan
    #      working-directory: ./infra/envs/${{inputs.environment}}
    #      shell: bash
    #      run: terraform plan
    - name: Terraform plan
      uses: dflook/terraform-plan@v1
      with:
        path: ./infra/envs/${{inputs.environment}}
