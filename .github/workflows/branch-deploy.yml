name: Google Branch

on:
  push:
    branches: [google-cloud]

env:
  REGION: "europe-north1"
  PROJECT: "fvst-staging-5"
  DOCKER_TAG: v0.0.${{ github.run_number }}
  DB_INSTANCE: fvst-primary-db

jobs:
  verify:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ["demo", "auth"]
    steps:
      - uses: "actions/checkout@v3"

      - name: "Unpack Key"
        id: "google-key"
        run: |
          GOOGLE_CLOUD_TOKEN=$(echo ${{secrets.GOOGLE_CLOUD_TOKEN}} | base64 --decode)
          echo "GOOGLE_CLOUD_TOKEN=$GOOGLE_CLOUD_TOKEN" >> $GITHUB_OUTPUT

      - name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: ${{steps.google-key.outputs.GOOGLE_CLOUD_TOKEN}}

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"
        with:
          version: ">= 417.0.0"

      - name: Info
        run: |
          gcloud info
          gcloud config set project $PROJECT

      - name: Login to artifact repository
        run: gcloud auth configure-docker

      - name: "Turn on features"
        run: gcloud services enable compute.googleapis.com sqladmin.googleapis.com run.googleapis.com containerregistry.googleapis.com cloudbuild.googleapis.com servicenetworking.googleapis.com vpcaccess.googleapis.com

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: Restore node_modules
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm install

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm test

      - name: Build
        run: npm run build

      - name: Build Docker
        run: |
          cd apps/${{matrix.service}} 
          docker build -f Dockerfile . -t gcr.io/$PROJECT/fvst-monorepo-auth:$DOCKER_TAG
      - name: Push to repo
        run: docker push gcr.io/$PROJECT/fvst-monorepo-auth:$DOCKER_TAG

      - name: Deploy
        run: gcloud run deploy ${{matrix.service}} --image gcr.io/$PROJECT/fvst-monorepo-auth:$DOCKER_TAG --add-cloudsql-instances $DB_INSTANCE --region $REGION --set-env-vars DATABASE_URL="postgresql://fvst:fvst@localhost/fvst?host=/cloudsql/$PROJECT:$REGION:$DB_INSTANCE" --set-env-vars NODE_ENV=development --allow-unauthenticated
