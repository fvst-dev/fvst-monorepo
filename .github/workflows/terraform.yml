name: Terraform
on: [push]

jobs:
  initialize:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - environment: staging
            google_cloud_token: GOOGLE_CLOUD_TOKEN_STAGING
            terraform_bucket: FVST_PROJECT_TF_STATE_BUCKET_STAGING
    #          - environment: production
    #            google_cloud_token: GOOGLE_CLOUD_TOKEN_PRODUCTION
    #            terraform_bucket: FVST_PROJECT_TF_STATE_BUCKET_PRODUCTION

    env:
      PROJECT: ${{ vars.FVST_PROJECT_PREFIX }}-fvst-${{matrix.environment}}
      REGION: ${{ vars.FVST_PROJECT_REGION }}
      GOOGLE_CLOUD_TOKEN_ENV: ${{ secrets[matrix.google_cloud_token] }}
      TERRAFORM_BUCKET: ${{ vars[matrix.terraform_bucket] }}

    steps:
      - uses: "actions/checkout@v3"

      - name: Print info
        run: |
          echo "Using $PROJECT as project"

      - name: "Unpack Key"
        id: "google-key"
        run: |
          GOOGLE_CLOUD_TOKEN=$(echo $GOOGLE_CLOUD_TOKEN_ENV | base64 --decode)
          echo "GOOGLE_CLOUD_TOKEN=$GOOGLE_CLOUD_TOKEN" >> $GITHUB_OUTPUT

      - name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{steps.google-key.outputs.GOOGLE_CLOUD_TOKEN}}"
          export_environment_variables: true

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: Info
        run: gcloud info

      - name: Setup terraform remote and configuration
        run: |
          cat <<EOT >> "./infra/envs/${{matrix.environment}}/backend.tf"
            terraform {
              backend "gcs" {
                bucket = "$TERRAFORM_BUCKET"
              }
          }
          EOT
          cat <<EOT >> "./infra/envs/${{matrix.environment}}/terraform.tfvars"
            region  = "$REGION"
            project = "$PROJECT"
          EOT

      - name: Terraform init
        run: |
          cd ./infra/envs/${{matrix.environment}}
          terraform init
